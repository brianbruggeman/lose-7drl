[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = docs/_build
all_files = 1

[upload_sphinx]
upload-dir = docs/_build/html
all_files = 1

[upload_docs]
upload-dir = docs/_build/html
all_files = 1

[pbr]
# Let pbr run sphinx-apidoc
autodoc_tree_index_modules = True
# autodoc_tree_excludes = ...
# Let pbr itself generate the apidoc
# autodoc_index_modules = True
# autodoc_exclude_modules = ...
# Convert warnings to errors
# warnerrors = True

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel,bdist_egg

[coverage:run]
branch = True
omit =
    tests/*
source =
    lose

[coverage:html]
directory = docs/_build/html/

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    def __str__
    def __dir__
    if __name__ == .__main__.:

[tool:pytest]
timeout = 300
testpaths = tests lose
addopts =
    # Shows local variables in tracebacks
    --showlocals
    # Cleans pytest cache between each run
    --cache-clear
    # More output
    --verbose
    # Color
    --color=yes
    # Show extra output on errors
    -r a
    # Append coverage to existing coverage data
    --cov-append
    # Display missing lines on coverage report output
    --cov-report=term-missing
    # Fail coverage test if coverage is below % value
    --cov-fail-under=40
    # Run flake8 on code
    --flake8
    # Package path(s) to cover
    --cov=lose
    # Show stdout
    # -s
    # Do not cut out traceback
    # --full-trace
    # Stop after first failure
    # --exitfirst
    # Break on errors
    # --pdb
norecursedirs = .git build tmp* *.egg-info venv*
looponfailroots = lose tests
flake8-ignore =
    *.py E201
    *.py E231
    *.py E501
    __init__.py F401
    docs/*.py ALL
    tests/*.py ALL
    setup.py ALL

[flake8]
jobs = 8
ignore =
    E201,
    E231,
    E501,
exclude =
    setup.py,
    tests,
    docs,
    .git,
    build,
    dist,
    __pycache__,


[isort]
not_skip=__init__.py
line_length=140
indent='    '
multi_line_output=3
length_sort=1
